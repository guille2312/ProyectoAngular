{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/components/products/product/product.component.ts","./src/app/components/products/product/product.component.html","./src/app/services/product.service.ts","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/firebase.service.ts","./src/app/app.module.ts","./src/app/components/products/product-list/product-list.component.html","./src/app/components/products/product-list/product-list.component.ts","./src/app/app-routing.module.ts","./src/app/models/product.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FirebaseService } from '../services/firebase.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  @Output() isLogout = new EventEmitter<void>()\n  constructor(public firebaseService: FirebaseService) { }\n\n  ngOnInit(): void {\n  }\n  logout(){\n    this.firebaseService.logout()\n    this.isLogout.emit()\n  }\n\n}","<p>You are logged in crack</p>\n<button (click)=\"logout()\">Logout</button>\n\n<app-products></app-products>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase:{\n    apiKey: \"AIzaSyBXFf7tV4wmOLdUTZfbAXunxRkLLGJ1S9Q\",\n    authDomain: \"applista-64281.firebaseapp.com\",\n    databaseURL: \"https://applista-64281-default-rtdb.europe-west1.firebasedatabase.app\",\n    projectId: \"applista-64281\",\n    storageBucket: \"applista-64281.appspot.com\",\n    messagingSenderId: \"735009989207\",\n    appId: \"1:735009989207:web:0f29990b55ca39b24e7912\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n//  Service \nimport { ProductService } from '../../../services/product.service';\n\n// Class\nimport { Product } from '../../../models/product';\n\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n\n  constructor(\n    public productService: ProductService,\n  ) { }\n\n  ngOnInit() {\n    this.productService.getProducts();\n    this.resetForm();\n  }\n\n  onSubmit(productForm: NgForm)\n  {\n    if(productForm.value.$key == null)\n      this.productService.insertProduct(productForm.value);\n    else\n    this.productService.updateProduct(productForm.value);\n    \n    this.resetForm(productForm);\n  }\n\n  resetForm(productForm?: NgForm)\n  {\n    if(productForm != null)\n      productForm.reset();\n      this.productService.selectedProduct = new Product();\n  }\n\n}\n","<div class=\"card mt-5\">\n  <div class=\"card-body\">\n      <form #productForm=\"ngForm\" (ngSubmit)=\"onSubmit(productForm)\">\n          <!-- TO UPDATE -->\n          <input type=\"hidden\" name=\"$key\" #$key=\"ngModel\" [(ngModel)]=\"productService.selectedProduct.$key\">\n\n          <div class=\"form-group\">\n            <input \n              type=\"text\"\n              class=\"form-control\"\n              name=\"name\"\n              #name=\"ngModel\"\n              [(ngModel)]=\"productService.selectedProduct.name\"\n              placeholder=\"Añade un producto\"\n              >\n          </div>\n          <div class=\"form-group\">\n              <input \n                type=\"text\"\n                class=\"form-control\"\n                name=\"category\"\n                #category=\"ngModel\"\n                [(ngModel)]=\"productService.selectedProduct.category\"\n                placeholder=\"Añade la persona que lo compro\"\n                >\n            </div>\n          \n         \n\n          <div class=\"form-group\">\n            <button class=\"btn btn-primary\" type=\"submit\">\n                <i class=\"fas fa-plus-circle\"></i> Añadir un producto\n            </button>\n            <button class=\"btn btn-secondary\" type=\"reset\" (click)=\"resetForm(productForm)\">\n                <i class=\"fas fa-sync-alt\"></i> Resetear\n            </button>\n          </div>\n        </form>\n  </div>\n</div>","import { Injectable } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\nimport { Product } from '../models/product';\n\n@Injectable()\n\nexport class ProductService {\n\n  productList: AngularFireList<any>;\n  selectedProduct: Product = new Product();\n\n  constructor(private firebase: AngularFireDatabase) { }\n\n  getProducts() {\n    return this.productList = this.firebase.list('products');\n  }\n\n  insertProduct(product: Product) {\n    this.productList.push({\n      name: product.name,\n      category: product.category,\n\n    });\n  }\n\n  updateProduct(product: Product) {\n    this.productList.update(product.$key, {\n      name: product.name,\n      category: product.category,\n\n    });\n  }\n\n  deleteProduct($key: string) {\n    this.productList.remove($key);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-5\">\n      <app-product></app-product>\n    </div>\n    <div class=\"col-md-7 text-center\">\n      <img width=\"300\" alt=\"Angular Logo\"\n        src=\"https://creazilla-store.fra1.digitaloceanspaces.com/emojis/56260/shopping-cart-emoji-clipart-md.png\">\n      <app-product-list></app-product-list>\n    </div>\n  </div>\n</div>","\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProyectoAppLista';\n}\n/*\nimport { Component, OnInit } from '@angular/core';\nimport { FirebaseService } from './services/firebase.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'firebase-angular-auth';\n  isSignedIn = false\n  constructor(public firebaseService: FirebaseService) { }\n  ngOnInit() {\n    if (localStorage.getItem('user') !== null)\n      this.isSignedIn = true\n    else\n      this.isSignedIn = false\n  }\n  async onSignup(email: string, password: string) {\n    await this.firebaseService.signup(email, password)\n    if (this.firebaseService.isLoggedIn)\n      this.isSignedIn = true\n  }\n  async onSignin(email: string, password: string) {\n    await this.firebaseService.signin(email, password)\n    if (this.firebaseService.isLoggedIn)\n      this.isSignedIn = true\n  }\n  handleLogout() {\n    this.isSignedIn = false\n\n  }\n\n}\n */"," \n<nav class=\"navbar navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"/\">Lista de la Compra</a>\n</nav>\n\n<app-products></app-products>\n\n <!--\n\n<div *ngIf=\"!isSignedIn\">\n  <h2>Sign up</h2>\n  <input type=\"text\" #emailSignup/>\n  <input type=\"text\" #passwordSignup/>\n  <button (click)=\"onSignup(emailSignup.value,passwordSignup.value)\">Sign up</button>\n</div>\n<hr>\n<div *ngIf=\"!isSignedIn\">\n  <h2>Sign In</h2>\n  <input type=\"text\" #email/>\n  <input type=\"text\" #password/>\n  <button (click)=\"onSignin(email.value,password.value)\">Sign in</button>\n</div>\n<app-home *ngIf=\"isSignedIn\" (isLogout)=\"handleLogout()\"></app-home> -->","import { Injectable } from '@angular/core';\nimport {AngularFireAuth} from '@angular/fire/auth'\nimport {AngularFireDatabaseModule} from 'angularfire2/database'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseService {\n\n  isLoggedIn = false\n  \n  constructor(public firebaseAuth : AngularFireAuth) { }\n\n  async signin(email: string, password : string){\n    await this.firebaseAuth.signInWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n  async signup(email: string, password : string){\n    await this.firebaseAuth.createUserWithEmailAndPassword(email,password)\n    .then(res=>{\n      this.isLoggedIn = true\n      localStorage.setItem('user',JSON.stringify(res.user))\n    })\n  }\n  logout(){\n    this.firebaseAuth.signOut()\n    localStorage.removeItem('user')\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n// firebase\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { environment } from '../environments/environment';\n\n// components\nimport { ProductsComponent } from './components/products/products.component';\nimport { ProductComponent } from './components/products/product/product.component';\nimport { ProductListComponent } from './components/products/product-list/product-list.component';\n\n// service\nimport { ProductService } from './services/product.service';\nimport { FirebaseService } from './services/firebase.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    ProductComponent,\n    ProductListComponent,\n    HomeComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    FormsModule,\n\n  ],\n  providers: [\n    ProductService,\n    FirebaseService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"card\">\n  <div class=\"card-body\">\n    <h6 class=\"text-center\">\n      Lista de Productos\n    </h6>\n    <table class=\"table table-sm table-hover\">\n      <tbody>\n        <tr *ngFor=\"let product of productList\">\n          <td>{{product.name}}</td>\n          <td>{{product.category}}</td>\n          <td>\n            <a class=\"btn btn-secondary text-white\" (click)=\"onEdit(product)\">\n                <i class=\"far fa-edit\"></i>\n            </a>\n            <a class=\"btn btn-danger text-white\" (click)=\"onDelete(product.$key)\">\n                <i class=\"fas fa-trash-alt\"></i>\n            </a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n// model\nimport { Product } from '../../../models/product';\n\n// service\nimport { ProductService } from '../../../services/product.service';\n\n// toastr\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n  productList: Product[];\n\n  constructor(\n    private productService: ProductService,\n  ) { }\n\n  ngOnInit() {\n    return this.productService.getProducts()\n      .snapshotChanges().subscribe(item => {\n        this.productList = [];\n        item.forEach(element => {\n          let x = element.payload.toJSON();\n          x[\"$key\"] = element.key;\n          this.productList.push(x as Product);\n        });\n      });\n  }\n\n  onEdit(product: Product) {\n    this.productService.selectedProduct = Object.assign({}, product);\n  }\n\n  onDelete($key: string) {\n    if(confirm('Are you sure you want to delete it?')) {\n      this.productService.deleteProduct($key);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export class Product {\n    $key: string;\n    name: string;\n    category: string;\n    location: string;\n    price: number;\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}